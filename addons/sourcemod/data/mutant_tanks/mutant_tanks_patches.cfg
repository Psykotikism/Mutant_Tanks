// Mutant Tanks Memory Patches
// --
// Notices
// - For users: Do NOT change anything here unless you know what you are doing.
// - For developers: These are all the necessary information for each patch done by Mutant Tanks.
// --
// Notes
// - A lot of these patches just block functions (NOPs/0x90) or create jump instructions (JMP/0xE9).
// - Most of these patches are used for the Reward system.
// - Most of the keys must have values since this config file is strictly read due to how sensitive patching is.
"MTPatches"
{
	// Template
	// --
	//"<game>" ("left4dead" or "left4dead2" only)
	//{
	//	"UniquePatchName" (Used to retrieve patch index for easy look-up.)
	//	{
	//		"log"			"" ("yes" - log patch procedure.
	//						"no" - do patch procedure discretely.)
	//		"cvarcheck"		"" (Optional: The cvar to check for plugin conflicts.)
	//		"type"			"" ("permanent" - patch address as soon as the server starts.
	//						"ondemand" - patch address whenever MT needs to.
	//						"unused" - skip the patch.)
	//		"signature"		"" (The gamedata signature used to find the address.)
	//		"offset"		"" (Optional: The gamedata offset used to find the address.)
	//		"<os>" ("linux" or "windows" only)
	//		{
	//			"verify"		"" (The byte(s) of the address to verify before patching. Use "\x2A" to skip verification.)
	//			"patch"			"" (The byte(s) to patch the address with.)
	//		}
	//	}
	//}
	"left4dead"
	{
		"Boomer1CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::Boomer1"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
		}
		"Boomer2CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::Boomer2"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
		}
		"Boomer3CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::Boomer3"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
		}
		"DoJumpHeight"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"DoJumpValueBytes"
			"linux"
			{
				"verify"		"\x00\x00\x64\x42"
				"patch"			"\x00\x00\x48\x43"
			}
			"windows"
			{
				"verify"		"\x00\x00\x00\x00\x00\x80\x4C\x40"
				"patch"			"\x00\x00\x00\x00\x00\x00\x69\x40"
			}
		}
		"EquipSecondWeapon1"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"EquipSecondWeaponStart"
			"offset"		"CTerrorGun::EquipSecondWeapon::Deploy"
			"linux"
			{
				"verify"		"\x8B"
				"patch"			"\xEB\x09"
			}
			"windows"
			{
				"verify"		"\x8B"
				"patch"			"\xEB\x0A"
			}
		}
		"EquipSecondWeapon2"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"EquipSecondWeaponStart"
			"offset"		"CTerrorGun::EquipSecondWeapon::Holster"
			"linux"
			{
				"verify"		"\x8B"
				"patch"			"\xEB\x11"
			}
			"windows"
			{
				"verify"		"\x8B"
				"patch"			"\xEB\x0C"
			}
		}
		"EquipSecondWeapon3"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"EquipSecondWeaponStart"
			"offset"		"CTerrorGun::EquipSecondWeapon::SetActiveWeapon"
			"linux"
			{
				"verify"		"\x89"
				"patch"			"\xEB\x0E"
			}
			"windows"
			{
				"verify"		"\x56"
				"patch"			"\xEB\x06"
			}
		}
		"FallScreamMute"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"OnFallingStart"
			"offset"		"CTerrorPlayer::OnFalling::Scream"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xD9"
				"patch"			"\xEB\x10"
			}
		}
		"InfectedInjured"
		{
			"log"			"no"
			"type"			"permanent"
			"signature"		"OnInjuredStart"
			"offset"		"InfectedExecAction::OnInjured::Requirement"
			"linux"
			{
				"verify"		"\xF6"
				"patch"			"\xF6\x86\x3B\x00\x00\x00\x04"
			}
			"windows"
			{
				"verify"		"\x6A"
				"patch"			"\x90\x90\x90\x90\xF7\x47\x38\x00\x00\x00\x04"
			}
		}
		"LadderDismount1"
		{
			"log"			"no"
			"cvarcheck"		"l4d2_cs_ladders"
			"type"			"ondemand"
			"signature"		"OnLadderDismountStart"
			"offset"		"CTerrorPlayer::OnLadderDismount::WeaponDeploy"
			"linux"
			{
				"verify"		"\x8B\x2A\x89\x2A\x2A\xFF"
				"patch"			"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xFF"
				"patch"			"\x90\x90"
			}
		}
		"LadderDismount2"
		{
			"log"			"no"
			"cvarcheck"		"l4d2_cs_ladders"
			"type"			"ondemand"
			"signature"		"PreThinkStart"
			"offset"		"CTerrorPlayer::PreThink::SafeDropLogic"
			"linux"
			{
				"verify"		"\x09"
				"patch"			"\xFF"
			}
			"windows"
			{
				"verify"		"\x09"
				"patch"			"\xFF"
			}
		}
		"LadderMount1"
		{
			"log"			"no"
			"cvarcheck"		"l4d2_cs_ladders"
			"type"			"ondemand"
			"signature"		"OnLadderMountStart"
			"offset"		"CTerrorPlayer::OnLadderMount::WeaponHolster"
			"linux"
			{
				"verify"		"\x74"
				"patch"			"\x90\x90"
			}
			"windows"
			{
				"verify"		"\x75"
				"patch"			"\x5E\xC3"
			}
		}
		"LadderMount2"
		{
			"log"			"no"
			"cvarcheck"		"l4d2_cs_ladders"
			"type"			"ondemand"
			"signature"		"CanDeployForStart"
			"offset"		"CTerrorWeapon::CanDeployFor::MoveType"
			"linux"
			{
				"verify"		"\x09"
				"patch"			"\xFF"
			}
			"windows"
			{
				"verify"		"\x09"
				"patch"			"\xFF"
			}
		}
		"RespawnStats"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"RoundRespawnStart"
			"offset"		"CTerrorPlayer::RoundRespawn::StatsCondition"
			"linux"
			{
				"verify"		"\x75"
				"patch"			"\x79"
			}
			"windows"
			{
				"verify"		"\x75"
				"patch"			"\x79"
			}
		}
		"ReviveInterrupt"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"OnTakeDamageAliveStart"
			"offset"		"CTerrorPlayer::OnTakeDamage_Alive::Revive"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\x6A"
				"patch"			"\x90\x90\x90\x90\x90\x90\x90\x90\x90"
			}
		}
		"Smoker1CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::Smoker1"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xD9"
				"patch"			"\xEB\x12"
			}
		}
		"Smoker2CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::Smoker2"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\x8B"
				"patch"			"\xEB\x3A"
			}
		}
		"Smoker3CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::Smoker3"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
		}
		"Smoker4CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"FireSmokerCloud"
			"linux"
			{
				"verify"		"\x57"
				"patch"			"\xC3"
			}
			"windows"
			{
				"verify"		"\x83"
				"patch"			"\xC2\x04\x00"
			}
		}
		"TankGroundPound"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"GroundPoundStart"
			"offset"		"CTankClaw::GroundPound::Check"
			"linux"
			{
				"verify"		"\xE8\x2A\x2A\x2A\x2A\x84"
				"patch"			"\x90\x90\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\x74\x2A\x80\x2A\x2A\x2A\x2A\x74"
				"patch"			"\x90\x90\x90\x90\x90\x90\x90\x90\x90"
			}
		}
		"TankRockRelease"
		{
			"log"			"no"
			"type"			"permanent"
			"signature"		"OnReleaseStart"
			"offset"		"CTankRock::OnRelease::SoundLoop"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xD9"
				"patch"			"\xEB\x12"
			}
		}
		"TankSweepFist1"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"SweepFistStart"
			"offset"		"CTankClaw::SweepFist::Check1"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
		}
		"TankSweepFist2"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"SweepFistStart"
			"offset"		"CTankClaw::SweepFist::Check2"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
		}
	}
	"left4dead2"
	{
		"Boomer1CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::Boomer1"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
		}
		"Boomer2CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::Boomer2"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
		}
		"Boomer3CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::Boomer3"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
		}
		"Boomer4CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::Boomer4"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
		}
		"Boomer5CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::Boomer5"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
		}
		"Boomer6CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::Boomer6"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
		}
		"DoJumpHeight"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"DoJumpValueBytes"
			"linux"
			{
				"verify"		"\x00\x00\x00\x00\x00\x80\x4C\x40"
				"patch"			"\x00\x00\x00\x00\x00\x00\x69\x40"
			}
			"windows"
			{
				"verify"		"\x00\x00\x00\x00\x00\x80\x4C\x40"
				"patch"			"\x00\x00\x00\x00\x00\x00\x69\x40"
			}
		}
		"EquipSecondWeapon1"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"EquipSecondWeaponStart"
			"offset"		"CTerrorGun::EquipSecondWeapon::Deploy"
			"linux"
			{
				"verify"		"\x8B"
				"patch"			"\xEB\x09"
			}
			"windows"
			{
				"verify"		"\x8B"
				"patch"			"\xEB\x0A"
			}
		}
		"EquipSecondWeapon2"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"EquipSecondWeaponStart"
			"offset"		"CTerrorGun::EquipSecondWeapon::Holster"
			"linux"
			{
				"verify"		"\x8B"
				"patch"			"\xEB\x11"
			}
			"windows"
			{
				"verify"		"\x8B"
				"patch"			"\xEB\x0C"
			}
		}
		"EquipSecondWeapon3"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"EquipSecondWeaponStart"
			"offset"		"CTerrorGun::EquipSecondWeapon::SetActiveWeapon"
			"linux"
			{
				"verify"		"\x89"
				"patch"			"\xEB\x0A"
			}
			"windows"
			{
				"verify"		"\x56"
				"patch"			"\xEB\x06"
			}
		}
		"FallScreamMute"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"OnFallingStart"
			"offset"		"CTerrorPlayer::OnFalling::Scream"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xD9"
				"patch"			"\xEB\x10"
			}
		}
		"LadderDismount1"
		{
			"log"			"no"
			"cvarcheck"		"l4d2_cs_ladders"
			"type"			"ondemand"
			"signature"		"OnLadderDismountStart"
			"offset"		"CTerrorPlayer::OnLadderDismount::WeaponDeploy"
			"linux"
			{
				"verify"		"\x8B\x2A\x89\x2A\x2A\xFF"
				"patch"			"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xFF"
				"patch"			"\x90\x90"
			}
		}
		"LadderDismount2"
		{
			"log"			"no"
			"cvarcheck"		"l4d2_cs_ladders"
			"type"			"ondemand"
			"signature"		"PreThinkStart"
			"offset"		"CTerrorPlayer::PreThink::SafeDropLogic"
			"linux"
			{
				"verify"		"\x09"
				"patch"			"\xFF"
			}
			"windows"
			{
				"verify"		"\x09"
				"patch"			"\xFF"
			}
		}
		"LadderMount1"
		{
			"log"			"no"
			"cvarcheck"		"l4d2_cs_ladders"
			"type"			"ondemand"
			"signature"		"OnLadderMountStart"
			"offset"		"CTerrorPlayer::OnLadderMount::WeaponHolster"
			"linux"
			{
				"verify"		"\x75"
				"patch"			"\x90\x90"
			}
			"windows"
			{
				"verify"		"\x74"
				"patch"			"\x5E\xC3"
			}
		}
		"LadderMount2"
		{
			"log"			"no"
			"cvarcheck"		"l4d2_cs_ladders"
			"type"			"ondemand"
			"signature"		"CanDeployForStart"
			"offset"		"CTerrorWeapon::CanDeployFor::MoveType"
			"linux"
			{
				"verify"		"\x09"
				"patch"			"\xFF"
			}
			"windows"
			{
				"verify"		"\x09"
				"patch"			"\xFF"
			}
		}
		"RespawnStats"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"RoundRespawnStart"
			"offset"		"CTerrorPlayer::RoundRespawn::StatsCondition"
			"linux"
			{
				"verify"		"\x75"
				"patch"			"\x79"
			}
			"windows"
			{
				"verify"		"\x75"
				"patch"			"\x79"
			}
		}
		"ReviveInterrupt"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"OnTakeDamageAliveStart"
			"offset"		"CTerrorPlayer::OnTakeDamage_Alive::Revive"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\x6A"
				"patch"			"\x90\x90\x90\x90\x90\x90\x90\x90\x90"
			}
		}
		"Smoker1CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::Smoker1"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xD9"
				"patch"			"\xEB\x12"
			}
		}
		"Smoker2CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::Smoker2"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\x8B"
				"patch"			"\xEB\x3A"
			}
		}
		"Smoker3CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::Smoker3"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
		}
		"Smoker4CleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"FireSmokerCloud"
			"linux"
			{
				"verify"		"\x55"
				"patch"			"\xC3"
			}
			"windows"
			{
				"verify"		"\x55"
				"patch"			"\xC3"
			}
		}
		"SpitterCleanKill"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"Event_KilledStart"
			"offset"		"CTerrorPlayer::Event_Killed::SpitterPuddle"
			"linux"
			{
				"verify"		"\x8B"
				"patch"			"\xE9\xA5\x02\x00\x00"
			}
			"windows"
			{
				"verify"		"\x8B"
				"patch"			"\xE9\x1A\x01\x00\x00"
			}
		}
		"TankGroundPound"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"GroundPoundStart"
			"offset"		"CTankClaw::GroundPound::Check"
			"linux"
			{
				"verify"		"\x0F"
				"patch"			"\x90\xE9"
			}
			"windows"
			{
				"verify"		"\x74\x2A\x80\x2A\x2A\x2A\x74"
				"patch"			"\x90\x90\x90\x90\x90\x90\x90\x90"
			}
		}
		"TankRockRelease"
		{
			"log"			"no"
			"type"			"permanent"
			"signature"		"OnReleaseStart"
			"offset"		"CTankRock::OnRelease::SoundLoop"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xD9"
				"patch"			"\xEB\x12"
			}
		}
		"TankSweepFist1"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"SweepFistStart"
			"offset"		"CTankClaw::SweepFist::Check1"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
		}
		"TankSweepFist2"
		{
			"log"			"no"
			"type"			"ondemand"
			"signature"		"SweepFistStart"
			"offset"		"CTankClaw::SweepFist::Check2"
			"linux"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
			"windows"
			{
				"verify"		"\xE8"
				"patch"			"\x90\x90\x90\x90\x90"
			}
		}
	}
}