/**
 * Mutant Tanks Memory Patches
 * --
 * Notices
 * - For users: Do NOT change anything here unless you know what you are doing.
 * - For developers: These are all the necessary information for each patch done by Mutant Tanks.
 * --
 * Notes
 * - A lot of these patches just block functions (NOPs/0x90) or create jump instructions (JMP/0xE9/0xEB).
 * - Most of these patches are used for the Reward system.
 **/
"Mutant Tanks Patches"
{
	/**
	 * Template
	 * --
	 * // The game to apply this patch on.
	 * // --
	 * // Supported games:
	 * // "Left 4 Dead"/"Left4Dead"/"Left_4_Dead"/"L4D" - Left 4 Dead 1
	 * // "Left 4 Dead 1"/"Left4Dead1"/"Left_4_Dead_1"/"L4D1" - Left 4 Dead 1
	 * // "Left 4 Dead 2"/"Left4Dead2"/"Left_4_Dead_2"/"L4D2" - Left 4 Dead 2
	 * // "Both" - Left 4 Dead 1 & 2
	 * "<Game Name>"
	 * {
	 * 	// The unique name of the patch.
	 * 	// Note: This is used to retrieve the patch's index for easy look-up.
	 * 	// Note: This must start with the "MTPatch_" prefix.
	 * 	"MTPatch_PatchName"
	 * 	{
	 * 		// Enable logging for the patch.
	 * 		// --
	 * 		// 0/"disabled"/"false"/"off"/"no": OFF
	 * 		// 1/"enabled"/"true"/"on"/"yes": ON
	 * 		"Log"			"0"
	 *
	 * 		// Check the following convars for plugin conflicts.
	 * 		// Note: All convars provided by Mutant Tanks will be ignored. 
	 * 		// Note: This is optional.
	 * 		// --
	 * 		// Separate characters with commas (",").
	 * 		// --
	 * 		// Character limit: 320
	 * 		// Character limit for each convar: 32
	 * 		// --
	 * 		// Example: "left4dhooks_version"
	 * 		// Example: "left4dhooks_version,l4d2_cs_ladders"
	 * 		"Cvar Check"		""
	 *
	 * 		// The type of setup for the patch.
	 * 		// --
	 * 		// 0: OFF, do not use patch.
	 * 		// 1: ON, setup only.
	 * 		// 2: ON, setup and enable patch.
	 * 		"Type"			"0"
	 *
	 * 		// The gamedata signature used to find the address.
	 * 		// --
	 * 		// Character limit: 128
	 * 		"Signature"		""
	 *
	 * 		// The gamedata offset used to find the address.
	 * 		// Note: This is optional.
	 * 		// --
	 * 		// Character limit: 128
	 * 		"Offset"		""
	 *
	 * 		// The byte(s) of the address to verify before patching. Use "\x2A" to skip verification.
	 * 		// --
	 * 		// Character limit: 192
	 * 		"Verify"		""
	 *
	 * 		// The byte(s) of the address to bypass before patching. Use "\x2A" to skip bypass.
	 * 		// --
	 * 		// Character limit: 192
	 * 		"Bypass"		""
	 *
	 * 		// The byte(s) to patch the address with.
	 * 		// --
	 * 		// Character limit: 192
	 * 		"Patch"			""
	 *
	 * 		// Platform-specific overrides.
	 * 		// --
	 * 		// Supported platforms:
	 * 		// "Linux"/"Lin"
	 * 		// "Macintosh"/"Mac"
	 * 		// "Windows"/"Win"
	 * 		"<OS>"
	 * 		{
	 * 			// Enable logging for the patch.
	 * 			// --
	 * 			// 0/"disabled"/"false"/"off"/"no": OFF
	 * 			// 1/"enabled"/"true"/"on"/"yes": ON
	 * 			"Log"			"0"
	 *
	 * 			// Check the following convars for plugin conflicts.
	 * 			// Note: All convars provided by Mutant Tanks will be ignored. 
	 * 			// Note: This is optional.
	 * 			// --
	 * 			// Separate characters with commas (",").
	 * 			// --
	 * 			// Character limit: 320
	 * 			// Character limit for each convar: 32
	 * 			// --
	 * 			// Example: "left4dhooks_version"
	 * 			// Example: "left4dhooks_version,l4d2_cs_ladders"
	 * 			"Cvar Check"		""
	 *
	 * 			// The type of setup for the patch.
	 * 			// --
	 * 			// 0: OFF, do not use patch.
	 * 			// 1: ON, setup only.
	 * 			// 2: ON, setup and enable patch.
	 * 			"Type"			"0"
	 *
	 * 			// The gamedata signature used to find the address.
	 * 			// --
	 * 			// Character limit: 128
	 * 			"Signature"		""
	 *
	 * 			// The gamedata offset used to find the address.
	 * 			// Note: This is optional.
	 * 			// --
	 * 			// Character limit: 128
	 * 			"Offset"		""
	 *
	 * 			// The byte(s) of the address to verify before patching. Use "\x2A" to skip verification.
	 * 			// --
	 * 			// Character limit: 192
	 * 			"Verify"		""
	 *
	 * 			// The byte(s) of the address to bypass before patching. Use "\x2A" to skip bypass.
	 * 			// --
	 * 			// Character limit: 192
	 * 			"Bypass"		""
	 *
	 * 			// The byte(s) to patch the address with.
	 * 			// --
	 * 			// Character limit: 192
	 * 			"Patch"			""
	 * 		}
	 * 	}
	 * }
	 **/
	"Left 4 Dead 1"
	{
		"MTPatch_Boomer1CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::Boomer1"
			"Verify"		"\xE8"
			"Patch"			"\x90\x90\x90\x90\x90"
		}
		"MTPatch_Boomer2CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::Boomer2"
			"Verify"		"\xE8"
			"Patch"			"\x90\x90\x90\x90\x90"
		}
		"MTPatch_Boomer3CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::Boomer3"
			"Verify"		"\xE8"
			"Patch"			"\x90\x90\x90\x90\x90"
		}
		"MTPatch_DoJumpHeight"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_jump_system_version"
			"Type"			"1"
			"Signature"		"DoJumpValueBytes"
			"Linux"
			{
				"Verify"		"\x00\x00\x64\x42"
				"Patch"			"\x00\x00\x48\x43"
			}
			"Mac"
			{
				"Verify"		"\x00\x00\x00\x00\x00\x80\x4C\x40"
				"Patch"			"\x00\x00\x00\x00\x00\x00\x69\x40"
			}
			"Windows"
			{
				"Verify"		"\x00\x00\x00\x00\x00\x80\x4C\x40"
				"Patch"			"\x00\x00\x00\x00\x00\x00\x69\x40"
			}
		}
		"MTPatch_EquipSecondWeapon1"
		{
			"Log"			"0"
			"Cvar Check"		"pickup_switch_flags"
			"Type"			"1"
			"Signature"		"EquipSecondWeaponStart"
			"Offset"		"CTerrorGun::EquipSecondWeapon::Deploy"
			"Linux"
			{
				"Verify"		"\x8B"
				"Patch"			"\xEB\x09"
			}
			"Mac"
			{
				"Verify"		"\x8B"
				"Patch"			"\xEB\x09"
			}
			"Windows"
			{
				"Verify"		"\x8B"
				"Patch"			"\xEB\x0A"
			}
		}
		"MTPatch_EquipSecondWeapon2"
		{
			"Log"			"0"
			"Cvar Check"		"pickup_switch_flags"
			"Type"			"1"
			"Signature"		"EquipSecondWeaponStart"
			"Offset"		"CTerrorGun::EquipSecondWeapon::Holster"
			"Linux"
			{
				"Verify"		"\x8B"
				"Patch"			"\xEB\x11"
			}
			"Mac"
			{
				"Verify"		"\x8B"
				"Patch"			"\xEB\x11"
			}
			"Windows"
			{
				"Verify"		"\x8B"
				"Patch"			"\xEB\x0C"
			}
		}
		"MTPatch_EquipSecondWeapon3"
		{
			"Log"			"0"
			"Cvar Check"		"pickup_switch_flags"
			"Type"			"1"
			"Signature"		"EquipSecondWeaponStart"
			"Offset"		"CTerrorGun::EquipSecondWeapon::SetActiveWeapon"
			"Linux"
			{
				"Verify"		"\x89"
				"Patch"			"\xEB\x0E"
			}
			"Mac"
			{
				"Verify"		"\x89"
				"Patch"			"\xEB\x0A"
			}
			"Windows"
			{
				"Verify"		"\x56"
				"Patch"			"\xEB\x06"
			}
		}
		"MTPatch_FallScreamMute"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_jump_system_version"
			"Type"			"1"
			"Signature"		"OnFallingStart"
			"Offset"		"CTerrorPlayer::OnFalling::Scream"
			"Linux"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\xD9"
				"Patch"			"\xEB\x10"
			}
		}
		"MTPatch_InfectedInjured"
		{
			"Log"			"0"
			"Type"			"2"
			"Signature"		"OnInjuredStart"
			"Offset"		"InfectedExecAction::OnInjured::Requirement"
			"Linux"
			{
				"Verify"		"\xF6"
				"Patch"			"\xF6\x86\x3B\x00\x00\x00\x04"
			}
			"Mac"
			{
				"Verify"		"\xF6"
				"Patch"			"\xF6\x86\x3B\x00\x00\x00\x04"
			}
			"Windows"
			{
				"Verify"		"\x6A"
				"Patch"			"\x90\x90\x90\x90\xF7\x47\x38\x00\x00\x00\x04"
			}
		}
		"MTPatch_LadderDismount1"
		{
			"Log"			"0"
			"Cvar Check"		"l4d2_cs_ladders"
			"Type"			"1"
			"Signature"		"OnLadderDismountStart"
			"Offset"		"CTerrorPlayer::OnLadderDismount::WeaponDeploy"
			"Linux"
			{
				"Verify"		"\x8B\x2A\x89\x2A\x2A\xFF"
				"Patch"			"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\x8B\x2A\x89\x2A\x2A\xFF"
				"Patch"			"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\xFF"
				"Patch"			"\x90\x90"
			}
		}
		"MTPatch_LadderDismount2"
		{
			"Log"			"0"
			"Cvar Check"		"l4d2_cs_ladders"
			"Type"			"1"
			"Signature"		"PreThinkStart"
			"Offset"		"CTerrorPlayer::PreThink::SafeDropLogic"
			"Verify"		"\x09"
			"Bypass"		"\x2A"
			"Patch"			"\xFF"
		}
		"MTPatch_LadderMount1"
		{
			"Log"			"0"
			"Cvar Check"		"l4d2_cs_ladders"
			"Type"			"1"
			"Signature"		"OnLadderMountStart"
			"Offset"		"CTerrorPlayer::OnLadderMount::WeaponHolster"
			"Linux"
			{
				"Verify"		"\x74"
				"Patch"			"\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\x75"
				"Patch"			"\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\x75"
				"Patch"			"\x5E\xC3"
			}
		}
		"MTPatch_LadderMount2"
		{
			"Log"			"0"
			"Cvar Check"		"l4d2_cs_ladders"
			"Type"			"1"
			"Signature"		"CanDeployForStart"
			"Offset"		"CTerrorWeapon::CanDeployFor::MoveType"
			"Verify"		"\x09"
			"Bypass"		"\x2A"
			"Patch"			"\xFF"
		}
		"MTPatch_PunchAngle"
		{
			"Log"			"0"
			"Type"			"1"
			"Signature"		"OnTakeDamageAliveStart"
			"Offset"		"CTerrorPlayer::OnTakeDamage_Alive::PunchAngle"
			"Linux"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\x8D"
				"Patch"			"\xEB\x14"
			}
		}
		"MTPatch_RespawnStats"
		{
			"Log"			"0"
			"Type"			"1"
			"Signature"		"RoundRespawnStart"
			"Offset"		"CTerrorPlayer::RoundRespawn::StatsCondition"
			"Verify"		"\x75"
			"Patch"			"\x79"
		}
		"MTPatch_ReviveInterrupt"
		{
			"Log"			"0"
			"Type"			"1"
			"Signature"		"OnTakeDamageAliveStart"
			"Offset"		"CTerrorPlayer::OnTakeDamage_Alive::Revive"
			"Linux"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\x6A"
				"Patch"			"\x90\x90\x90\x90\x90\x90\x90\x90\x90"
			}
		}
		"MTPatch_Smoker1CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::Smoker1"
			"Linux"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\xD9"
				"Patch"			"\xEB\x12"
			}
		}
		"MTPatch_Smoker2CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::Smoker2"
			"Linux"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\x8B"
				"Patch"			"\xEB\x3A"
			}
		}
		"MTPatch_Smoker3CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::Smoker3"
			"Verify"		"\xE8"
			"Patch"			"\x90\x90\x90\x90\x90"
		}
		"MTPatch_Smoker4CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"FireSmokerCloud"
			"Linux"
			{
				"Verify"		"\x57"
				"Patch"			"\xC3"
			}
			"Mac"
			{
				"Verify"		"\x57"
				"Patch"			"\xC3"
			}
			"Windows"
			{
				"Verify"		"\x83"
				"Patch"			"\xC2\x04\x00"
			}
		}
		"MTPatch_TankFinaleBehavior"
		{
			"Log"			"0"
			"Cvar Check"		"vigilant_tank_behavior_version"
			"Type"			"1"
			"Signature"		"InitialContainedActionStart"
			"Offset"		"TankBehavior::InitialContainedAction::Condition"
			"Linux"
			{
				"Verify"		"\x74"
				"Patch"			"\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\x74"
				"Patch"			"\xEB\x1A"
			}
			"Windows"
			{
				"Verify"		"\x75"
				"Patch"			"\xEB\x18"
			}
		}
		"MTPatch_TankGroundPound"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_sweep_fist_patch_version"
			"Type"			"1"
			"Signature"		"GroundPoundStart"
			"Offset"		"CTankClaw::GroundPound::Check"
			"Linux"
			{
				"Verify"		"\xE8\x2A\x2A\x2A\x2A\x84"
				"Patch"			"\x90\x90\x90\x90\x90\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\xE8"
				"Patch"			"\xEB\x0F"
			}
			"Windows"
			{
				"Verify"		"\x74\x2A\x80\x2A\x2A\x2A\x2A\x74"
				"Patch"			"\x90\x90\x90\x90\x90\x90\x90\x90\x90"
			}
		}
		"MTPatch_TankRockRelease"
		{
			"Log"			"0"
			"Type"			"1"
			"Signature"		"OnReleaseStart"
			"Offset"		"CTankRock::OnRelease::SoundLoop"
			"Linux"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\xD9"
				"Bypass"		"\x2A"
				"Patch"			"\xEB\x12"
			}
		}
		"MTPatch_TankSweepFist1"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_sweep_fist_patch_version"
			"Type"			"1"
			"Signature"		"SweepFistStart"
			"Offset"		"CTankClaw::SweepFist::Check1"
			"Verify"		"\xE8"
			"Patch"			"\x90\x90\x90\x90\x90"
		}
		"MTPatch_TankSweepFist2"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_sweep_fist_patch_version"
			"Type"			"1"
			"Signature"		"SweepFistStart"
			"Offset"		"CTankClaw::SweepFist::Check2"
			"Verify"		"\xE8"
			"Patch"			"\x90\x90\x90\x90\x90"
		}
	}
	"Left 4 Dead 2"
	{
		"MTPatch_Boomer1CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::Boomer1"
			"Verify"		"\xE8"
			"Patch"			"\x90\x90\x90\x90\x90"
		}
		"MTPatch_Boomer2CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::Boomer2"
			"Verify"		"\xE8"
			"Patch"			"\x90\x90\x90\x90\x90"
		}
		"MTPatch_Boomer3CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::Boomer3"
			"Verify"		"\xE8"
			"Patch"			"\x90\x90\x90\x90\x90"
		}
		"MTPatch_Boomer4CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::Boomer4"
			"Verify"		"\xE8"
			"Patch"			"\x90\x90\x90\x90\x90"
		}
		"MTPatch_Boomer5CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::Boomer5"
			"Verify"		"\xE8"
			"Patch"			"\x90\x90\x90\x90\x90"
		}
		"MTPatch_Boomer6CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::Boomer6"
			"Verify"		"\xE8"
			"Patch"			"\x90\x90\x90\x90\x90"
		}
		"MTPatch_DoJumpHeight"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_jump_system_version"
			"Type"			"1"
			"Signature"		"DoJumpValueBytes"
			"Verify"		"\x00\x00\x00\x00\x00\x80\x4C\x40"
			"Patch"			"\x00\x00\x00\x00\x00\x00\x69\x40"
		}
		"MTPatch_EquipSecondWeapon1"
		{
			"Log"			"0"
			"Cvar Check"		"pickup_switch_flags"
			"Type"			"1"
			"Signature"		"EquipSecondWeaponStart"
			"Offset"		"CTerrorGun::EquipSecondWeapon::Deploy"
			"Linux"
			{
				"Verify"		"\x8B"
				"Patch"			"\xEB\x09"
			}
			"Mac"
			{
				"Verify"		"\x8B"
				"Patch"			"\xEB\x09"
			}
			"Windows"
			{
				"Verify"		"\x8B"
				"Patch"			"\xEB\x0A"
			}
		}
		"MTPatch_EquipSecondWeapon2"
		{
			"Log"			"0"
			"Cvar Check"		"pickup_switch_flags"
			"Type"			"1"
			"Signature"		"EquipSecondWeaponStart"
			"Offset"		"CTerrorGun::EquipSecondWeapon::Holster"
			"Linux"
			{
				"Verify"		"\x8B"
				"Patch"			"\xEB\x11"
			}
			"Mac"
			{
				"Verify"		"\x8B"
				"Patch"			"\xEB\x11"
			}
			"Windows"
			{
				"Verify"		"\x8B"
				"Patch"			"\xEB\x0C"
			}
		}
		"MTPatch_EquipSecondWeapon3"
		{
			"Log"			"0"
			"Cvar Check"		"pickup_switch_flags"
			"Type"			"1"
			"Signature"		"EquipSecondWeaponStart"
			"Offset"		"CTerrorGun::EquipSecondWeapon::SetActiveWeapon"
			"Linux"
			{
				"Verify"		"\x89"
				"Patch"			"\xEB\x0A"
			}
			"Mac"
			{
				"Verify"		"\x89"
				"Patch"			"\xEB\x0A"
			}
			"Windows"
			{
				"Verify"		"\x56"
				"Patch"			"\xEB\x06"
			}
		}
		"MTPatch_FallScreamMute"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_jump_system_version"
			"Type"			"1"
			"Signature"		"OnFallingStart"
			"Offset"		"CTerrorPlayer::OnFalling::Scream"
			"Linux"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\xD9"
				"Patch"			"\xEB\x10"
			}
		}
		"MTPatch_LadderDismount1"
		{
			"Log"			"0"
			"Cvar Check"		"l4d2_cs_ladders"
			"Type"			"1"
			"Signature"		"OnLadderDismountStart"
			"Offset"		"CTerrorPlayer::OnLadderDismount::WeaponDeploy"
			"Linux"
			{
				"Verify"		"\x8B\x2A\x89\x2A\x2A\xFF"
				"Patch"			"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\x8B\x2A\x89\x2A\x2A\xFF"
				"Patch"			"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\xFF"
				"Patch"			"\x90\x90"
			}
		}
		"MTPatch_LadderDismount2"
		{
			"Log"			"0"
			"Cvar Check"		"l4d2_cs_ladders"
			"Type"			"1"
			"Signature"		"PreThinkStart"
			"Offset"		"CTerrorPlayer::PreThink::SafeDropLogic"
			"Verify"		"\x09"
			"Bypass"		"\x2A"
			"Patch"			"\xFF"
		}
		"MTPatch_LadderMount1"
		{
			"Log"			"0"
			"Cvar Check"		"l4d2_cs_ladders"
			"Type"			"1"
			"Signature"		"OnLadderMountStart"
			"Offset"		"CTerrorPlayer::OnLadderMount::WeaponHolster"
			"Linux"
			{
				"Verify"		"\x75"
				"Patch"			"\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\x74"
				"Patch"			"\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\x74"
				"Patch"			"\x5E\xC3"
			}
		}
		"MTPatch_LadderMount2"
		{
			"Log"			"0"
			"Cvar Check"		"l4d2_cs_ladders"
			"Type"			"1"
			"Signature"		"CanDeployForStart"
			"Offset"		"CTerrorWeapon::CanDeployFor::MoveType"
			"Verify"		"\x09"
			"Bypass"		"\x2A"
			"Patch"			"\xFF"
		}
		"MTPatch_PunchAngle"
		{
			"Log"			"0"
			"Type"			"1"
			"Signature"		"OnTakeDamageAliveStart"
			"Offset"		"CTerrorPlayer::OnTakeDamage_Alive::PunchAngle"
			"Linux"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\x8D"
				"Patch"			"\xEB\x11"
			}
		}
		"MTPatch_RespawnStats"
		{
			"Log"			"0"
			"Type"			"1"
			"Signature"		"RoundRespawnStart"
			"Offset"		"CTerrorPlayer::RoundRespawn::StatsCondition"
			"Verify"		"\x75"
			"Patch"			"\x79"
		}
		"MTPatch_ReviveInterrupt"
		{
			"Log"			"0"
			"Type"			"1"
			"Signature"		"OnTakeDamageAliveStart"
			"Offset"		"CTerrorPlayer::OnTakeDamage_Alive::Revive"
			"Linux"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\x6A"
				"Patch"			"\x90\x90\x90\x90\x90\x90\x90\x90\x90"
			}
		}
		"MTPatch_Smoker1CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::Smoker1"
			"Linux"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\xD9"
				"Patch"			"\xEB\x12"
			}
		}
		"MTPatch_Smoker2CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::Smoker2"
			"Linux"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\x8B"
				"Patch"			"\xEB\x3A"
			}
		}
		"MTPatch_Smoker3CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::Smoker3"
			"Verify"		"\xE8"
			"Patch"			"\x90\x90\x90\x90\x90"
		}
		"MTPatch_Smoker4CleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"FireSmokerCloud"
			"Verify"		"\x55"
			"Patch"			"\xC3"
		}
		"MTPatch_SpitterCleanKill"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_clean_kills_version"
			"Type"			"1"
			"Signature"		"Event_KilledStart"
			"Offset"		"CTerrorPlayer::Event_Killed::SpitterPuddle"
			"Linux"
			{
				"Verify"		"\x8B"
				"Patch"			"\xE9\xA5\x02\x00\x00"
			}
			"Mac"
			{
				"Verify"		"\x8B"
				"Patch"			"\xE9\x15\x0A\x00\x00"
			}
			"Windows"
			{
				"Verify"		"\x8B"
				"Patch"			"\xE9\x1A\x01\x00\x00"
			}
		}
		"MTPatch_TankFinaleBehavior"
		{
			"Log"			"0"
			"Cvar Check"		"vigilant_tank_behavior_version"
			"Type"			"1"
			"Signature"		"InitialContainedActionStart"
			"Offset"		"TankBehavior::InitialContainedAction::Condition"
			"Linux"
			{
				"Verify"		"\x74"
				"Patch"			"\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\x74"
				"Patch"			"\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\x75"
				"Patch"			"\xEB"
			}
		}
		"MTPatch_TankGroundPound"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_sweep_fist_patch_version"
			"Type"			"1"
			"Signature"		"GroundPoundStart"
			"Offset"		"CTankClaw::GroundPound::Check"
			"Linux"
			{
				"Verify"		"\x0F"
				"Patch"			"\x90\xE9"
			}
			"Mac"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\x74\x2A\x80\x2A\x2A\x2A\x74"
				"Patch"			"\x90\x90\x90\x90\x90\x90\x90\x90"
			}
		}
		"MTPatch_TankRockRelease"
		{
			"Log"			"0"
			"Type"			"1"
			"Signature"		"OnReleaseStart"
			"Offset"		"CTankRock::OnRelease::SoundLoop"
			"Linux"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Mac"
			{
				"Verify"		"\xE8"
				"Patch"			"\x90\x90\x90\x90\x90"
			}
			"Windows"
			{
				"Verify"		"\xD9"
				"Bypass"		"\x2A"
				"Patch"			"\xEB\x12"
			}
		}
		"MTPatch_TankSweepFist1"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_sweep_fist_patch_version"
			"Type"			"1"
			"Signature"		"SweepFistStart"
			"Offset"		"CTankClaw::SweepFist::Check1"
			"Verify"		"\xE8"
			"Patch"			"\x90\x90\x90\x90\x90"
		}
		"MTPatch_TankSweepFist2"
		{
			"Log"			"0"
			"Cvar Check"		"l4d_sweep_fist_patch_version"
			"Type"			"1"
			"Signature"		"SweepFistStart"
			"Offset"		"CTankClaw::SweepFist::Check2"
			"Verify"		"\xE8"
			"Patch"			"\x90\x90\x90\x90\x90"
		}
	}
}